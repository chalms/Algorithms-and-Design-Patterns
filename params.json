{"name":"Algorithms-and-design-patterns","tagline":"","body":"Algorithms-and-Design-Patterns\r\n==============================\r\n\r\nThe following library was designed as a means to practice, record, and optimize the implementation of advanced data structures and programming problems.\r\n\r\nThis library is still unfinished, but it intends to include: \r\n\r\n### Hash's, Queues, Graphs, and Stacks\r\n\r\nAdvanced and custom data structures from the ground up. Solve complex problems \r\nwith custom data structures. \r\n\r\n### Sorting Algorithms\r\n\r\nImplementation of common sorting algorithms (Mergesort, Quicksort, etc..)\r\n\r\n### Distributed Systems\r\n\r\nSimple client-server architecture for distributed systems, as well has map-reduce implementation.  \r\n\r\n### Resource Management\r\n\r\nSimple multi-threading examples with a producer, consumer, and limited resource. \r\nThis includes the singleton design pattern and synchronization examples with process blocking. \r\n\r\n### String and Bit manipulation\r\n\r\nString and bit manipulation examples to help you solve the trickiest interview questions.\r\n\r\n### Much more...\r\n\r\nSolutions to the most commonly asked challenging programming problems\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}